name: zeppelin-prod
volumes:
  mysql-data:
services:
  mysql:
    image: mysql:8.0
    security_opt:
      - "no-new-privileges:true"
    cap-drop:
      - SETUID
      - SETGID
    environment:
      MYSQL_ROOT_PASSWORD: ${STANDALONE_MYSQL_ROOT_PASSWORD?:Missing STANDALONE_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: zeppelin
      MYSQL_USER: zeppelin
      MYSQL_PASSWORD: ${STANDALONE_MYSQL_PASSWORD?:Missing STANDALONE_MYSQL_PASSWORD}
    expose:
      - ${STANDALONE_MYSQL_PORT:-:3306}
    #ports:
    #  - 127.0.0.1:${STANDALONE_MYSQL_PORT:?Missing STANDALONE_MYSQL_PORT}:3306
    # If you're upgrading from an older version, you can load your old database by switching the volumes below.
    # Then, take a database dump from the old database, switch the volumes back, and load the dump into the new database.
    volumes:
      - mysql-data:/var/lib/mysql
      # - ./docker/production/data/mysql:/var/lib/mysql
    #command: --authentication-policy=mysql_native_password
    healthcheck:
      test: "/usr/bin/mysql --host=127.0.0.1 --user=root --password=\"${STANDALONE_MYSQL_ROOT_PASSWORD}\" --execute \"SHOW DATABASES;\""
      interval: 1s
      timeout: 5s
      retries: 60

  nginx:
    build:
      context: .
      dockerfile: docker/production/nginx/Dockerfile
    security_opt:
      - "no-new-privileges:true"
    cap-drop:
      - SETUID
      - SETGID
    expose:
      - "${STANDALONE_WEB_PORT:-80}"
    #ports:
    #  - "${STANDALONE_WEB_PORT:?Missing STANDALONE_WEB_PORT}:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zeppelin.entrypoints=websecure"
      - "traefik.http.routers.zeppelin.rule=Host(`$DOMAIN`)"
      - "traefik.http.routers.zeppelin.tls.certresolver=http-challenge"
    networks:
      - network
      - traefik-proxy

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin:latest
    restart: unless-stopped
    security_opt:
      - "no-new-privileges:true"
    cap-drop:
      - SETUID
      - SETGID
    expose:
      - "80"
      #- "443"
    environment:
      PMA_HOST: mysql
      PMA_ABSOLUTE_URI: https://${DOMAIN:?Missing DOMAIN}/phpmyadmin/
      MYSQL_ROOT_PASSWORD: ${STANDALONE_MYSQL_ROOT_PASSWORD?:Missing STANDALONE_MYSQL_ROOT_PASSWORD}
      MYSQL_USER: zeppelin
      MYSQL_PASSWORD: ${STANDALONE_MYSQL_PASSWORD?:Missing STANDALONE_MYSQL_PASSWORD}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zeppelin-phpmyadmin.entrypoints=websecure"
      - "traefik.http.routers.zeppelin-phpmyadmin.rule=Host(`$DOMAIN`) and PathPrefix(`/phpmyadmin`)"
      - "traefik.http.routers.zeppelin-phpmyadmin.tls.certresolver=http-challenge"
    networks:
      - network
      - traefik-proxy

  migrate:
    depends_on:
      mysql:
        condition: service_healthy
    build: &build
      context: .
      args:
        # Used at compile-time by dashboard
        API_URL:
    security_opt:
      - "no-new-privileges:true"
    cap-drop:
      - SETUID
      - SETGID
    environment: &env
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=zeppelin
      - DB_PASSWORD=${STANDALONE_MYSQL_PASSWORD}
      - DB_DATABASE=zeppelin
      - API_PATH_PREFIX=/api
    env_file:
      - .env
    working_dir: /zeppelin/backend
    command: ["npm", "run", "migrate-prod"]

  api:
    depends_on:
      migrate:
        condition: service_completed_successfully
    build: *build
    restart: on-failure
    security_opt:
      - "no-new-privileges:true"
    cap-drop:
      - SETUID
      - SETGID
    environment: *env
    env_file:
      - .env
    working_dir: /zeppelin/backend
    command: ["npm", "run", "start-api-prod"]

  bot:
    depends_on:
      migrate:
        condition: service_completed_successfully
    build: *build
    restart: on-failure
    security_opt:
      - "no-new-privileges:true"
    cap-drop:
      - SETUID
      - SETGID
    environment: *env
    env_file:
      - .env
    working_dir: /zeppelin/backend
    command: ["npm", "run", "start-bot-prod"]
  
  dashboard:
    depends_on:
      migrate:
        condition: service_completed_successfully
    build: *build
    restart: on-failure
    security_opt:
      - "no-new-privileges:true"
    cap-drop:
      - SETUID
      - SETGID
    environment: *env
    env_file:
      - .env
    working_dir: /zeppelin/dashboard
    command: ["node", "serve.js"]
networks:
  network:
  traefik-proxy:
    external: true
